<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600"
			   xmlns:post="post.*"
			   xmlns:myPanel="markus.ringel.thesis.helper.*" 
			   xmlns:objecthandles="com.roguedevelopment.objecthandles.*"
			   xmlns:example="com.roguedevelopment.objecthandles.example.*"
			   click="application1_clickHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.roguedevelopment.objecthandles.*;
			import com.roguedevelopment.objecthandles.decorators.AlignmentDecorator;
			import com.roguedevelopment.objecthandles.decorators.DecoratorManager;
			import com.roguedevelopment.objecthandles.example.*;
			
			
			protected var objectHandles:ObjectHandles;
			protected var decoratorManager:DecoratorManager;
			
			[Bindable] protected var flexModel1:SimpleDataModel = new SimpleDataModel();
			[Bindable] protected var flexModel2:SimpleDataModel = new SimpleDataModel();	
			[Bindable] protected var flexModel3:SimpleDataModel = new SimpleDataModel();
			
			override protected function initializationComplete() : void
			{				
				objectHandles = new ObjectHandles( mainGroup , 
					null, 
					new Flex4HandleFactory() , 
					new Flex4ChildManager() );
				
				flexModel1.x = 50;
				flexModel1.y = 150;
				flexModel1.width = 50;
				flexModel1.height = 50;
				flexModel1.isLocked = true;
				objectHandles.registerComponent( flexModel1, flexShape1 );
				
				
				flexModel2.x = 150;
				flexModel2.y = 150;
				flexModel2.width = 50;
				flexModel2.height = 50;
				objectHandles.registerComponent( flexModel2, flexShape2 );
				
				flexModel3.x = 150;
				flexModel3.y = 50;
				flexModel3.width = 50;
				flexModel3.height = 50;
				objectHandles.registerComponent( flexModel3, flexShape3 );
				super.initializationComplete();
				
				decoratorManager = new DecoratorManager( objectHandles, drawingLayer );
				decoratorManager.addDecorator( new AlignmentDecorator() );
			}
			
			protected function application1_clickHandler(event:MouseEvent):void
			{
				if(event.target is SimpleFlex4Shape) return;
				if(event.target is SimpleFlexShape) return;
				if(event.target is VisualElementHandle) return;
				objectHandles.selectionManager.clearSelection();
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		
	</fx:Declarations>
	
	<s:SpriteVisualElement width="100%" height="100%" id="drawingLayer" />
	<s:Group id="mainGroup" width="100%" height="100%">
		
		<!-- Here is a flex-4 style component -->
		<example:SimpleFlex4Shape id="flexShape2" model="{flexModel2}" />
		
		<!-- Here is a flex-3 style component -->
		<example:SimpleFlexShape id="flexShape1" model="{flexModel1}" />
		<example:SimpleFlexShape id="flexShape3" model="{flexModel3}" />
		
	</s:Group>
	</s:Application>